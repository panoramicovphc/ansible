name: "pipeline"
run-name: "${{ github.event_name }} by ${{ github.actor }} #${{ github.run_number }}.${{ github.run_attempt }}"

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]
  workflow_dispatch:
    inputs:
      reason:
        description: "Reason for running the workflow"
        required: true
        default: "Manual trigger"

env:
  ANSIBLE_PROJECT_PATH: "${{ vars.ANSIBLE_PROJECT_PATH }}"

jobs:

  publish-artifact:
    name: "build-and-publish-artifact"
    runs-on: [ "ubuntu-24.04" ]
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v2"
      - name: "Build hosts.ini"
        env:
          TANKIAN_USER_LOGIN: "${{ vars.TANKIAN_USER_LOGIN }}"
          TANKIAN_USER_PASSWORD: "${{ secrets.TANKIAN_USER_PASSWORD }}"
          CF_TUNNEL_TOKEN_TANKIAN: "${{ secrets.CF_TUNNEL_TOKEN_TANKIAN }}"
        run: |
          envsubst < inventory/hosts.ini.template > inventory/hosts.ini
      - name: "List artifact"
        run: |
          ls -la
      - name: "Resolve artifact name"
        id: resolve-name
        run: |
          echo "artifact_name=artifact-v${{ github.run_number }}.${{ github.run_attempt }}.tar.gz" >> $GITHUB_ENV
      - name: "Resolve artifact path"
        id: resolve-path
        run: |
          echo "artifact_path=${RUNNER_TEMP}/${{ env.artifact_name }}" >> $GITHUB_ENV
      - name: "Build artifact"
        run: |
          tar --exclude=".git" --exclude=".github" -czf ${{ env.artifact_path }} .
      - name: "Verify artifact"
        run: |
          if [ ! -f ${{ env.artifact_path }} ]; then
            echo "Artifact was not created successfully."
            exit 1
          fi
      - name: "Upload artifact"
        uses: "actions/upload-artifact@v4"
        with:
          name: ${{ env.artifact_name }}
          if-no-files-found: error
          path: ${{ env.artifact_path }}

  deploy-dev:
    name: "deploy-dev"
    environment: "dev"
    runs-on: [ "panoramicovphc", "self-hosted", "development" ]
    needs: [ "publish-artifact" ]
    steps:
      - name: "Download artifact"
        uses: "actions/download-artifact@v4"
        with:
          name: "${{ env.artifact_name }}"
      - name: "Delete backup directory"
        run: |
          if [ -d "${ANSIBLE_PROJECT_PATH}_bkp" ]; then
            rm -rf "${ANSIBLE_PROJECT_PATH}_bkp"
          fi
      - name: "Backup current project directory"
        run: |
          if [ -d "${ANSIBLE_PROJECT_PATH}" ]; then
            mv "${ANSIBLE_PROJECT_PATH}" "${ANSIBLE_PROJECT_PATH}_bkp"
          fi
      - name: "Ensure project directory exists"
        run: |
          sudo mkdir -p "${ANSIBLE_PROJECT_PATH}"
      - name: "Extract artifact"
        run: |
          tar -xzf "${{ env.artifact_path }}" -C "${ANSIBLE_PROJECT_PATH}"
