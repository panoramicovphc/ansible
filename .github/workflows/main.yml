name: "Publish Ansible project"
run-name: "${{ github.event_name }} by ${{ github.actor }} #${{ github.run_number }}.${{ github.run_attempt }}"

on:
  workflow_dispatch:
    inputs:
      reason:
        description: "Reason for running the workflow"
        required: true
        default: "Manual trigger"

env:
  ANSIBLE_PROJECT: ${{ vars.ANSIBLE_PROJECT }}

jobs:

  setup-ansible-runtime:
    name: "Setup Ansible runtime"
    runs-on:
      - "self-hosted"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v2"
      - name: "Run ansible-setup.sh"
        run: |
          chmod +x ./ansible-setup.sh
          ./ansible-setup.sh
      - name: "Verify Ansible installation"
        run: |
          ansible --version
      - name: "Checkout repository"
        uses: "actions/checkout@v2"
      - name: "Install gettext (envsubst)"
        run: |
          if command -v apt-get >/dev/null; then
            sudo apt-get install -y gettext
          elif command -v yum >/dev/null; then
            sudo yum install -y gettext
          elif command -v dnf >/dev/null; then
            sudo dnf install -y gettext
          elif command -v pacman >/dev/null; then
            sudo pacman -Sy --noconfirm gettext
          elif command -v zypper >/dev/null; then
            sudo zypper install -y gettext
          else
            echo "Unsupported package manager. Please install gettext manually."
            exit 1
          fi
      - name: "Update hosts.ini dynamically"
        env:
          TANKIAN_USER_LOGIN: "${{ vars.TANKIAN_USER_LOGIN }}"
          TANKIAN_USER_PASSWORD: "${{ secrets.TANKIAN_USER_PASSWORD }}"
          CF_TUNNEL_TOKEN_TANKIAN: "${{ secrets.CF_TUNNEL_TOKEN_TANKIAN }}"
        run: |
          envsubst < inventory/hosts.ini.template > inventory/hosts.ini
      - name: "Backup Ansible project"
        run: |
          if [ -d "${ANSIBLE_PROJECT}" ]; then
            sudo mkdir -p ${ANSIBLE_PROJECT}_backup
            timestamp=$(date +"%Y%m%d%H%M%S")
            sudo tar -czvf \
              ${ANSIBLE_PROJECT}_backup/ansible_backup_$timestamp.zip \
              --exclude=${ANSIBLE_PROJECT}/_dropfolder \
              --exclude=${ANSIBLE_PROJECT}/.github \
              --exclude=${ANSIBLE_PROJECT}/.git \
              ${ANSIBLE_PROJECT}
          else
            echo "Directory ${ANSIBLE_PROJECT} does not exist."
          fi
      - name: "Deploy Ansible project"
        run: |
          sudo rm -rf ${ANSIBLE_PROJECT}/*
          sudo mkdir -p ${ANSIBLE_PROJECT}
          sudo chmod 0755 ${ANSIBLE_PROJECT}
          sudo cp -r . ${ANSIBLE_PROJECT}/
          sudo rm -rf ${ANSIBLE_PROJECT}/.github
          sudo rm -rf ${ANSIBLE_PROJECT}/.git
      - name: "Setup Ansible dependencies"
        run: |
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook ${ANSIBLE_PROJECT}/playbooks/setup_ansible_dependencies.yml \
            -i ${ANSIBLE_PROJECT}/inventory/hosts.ini
      - name: "Propagate Ansible project"
        run: |
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook ${ANSIBLE_PROJECT}/playbooks/propagate_ansible_project.yml \
            -i ${ANSIBLE_PROJECT}/inventory/hosts.ini
      - name: "Setup Ansible runtime"
        run: |
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook ${ANSIBLE_PROJECT}/playbooks/setup_ansible_runtime.yml \
            -i ${ANSIBLE_PROJECT}/inventory/hosts.ini
